#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge icon (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send " Battery module" ": discharging
: not charging
: stagnant charge
: charging
: charged
: battery very low!" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge icon.
	capacity=$(cat "$battery"/capacity) || break
	status=$(cat "$battery"/status) || break

	# If it is discharging and 25% or less, we will add a ❗ as a warning.
	 [ "$capacity" -le 100 ] && icon=""
	 [ "$capacity" -le 90 ] && icon=""
	 [ "$capacity" -le 80 ] && icon=""
	 [ "$capacity" -le 70 ] && icon=""
	 [ "$capacity" -le 60 ] && icon=""
	 [ "$capacity" -le 50 ] && icon=""
	 [ "$capacity" -le 40 ] && icon=""
	 [ "$capacity" -le 30 ] && icon=""
	 [ "$capacity" -le 20 ] && icon=""
	 [ "$capacity" -le 10 ] && icon=""
	 [ "$capacity" -le 5 ] && icon=""
	 [ "$status" == "Charging" ] && icon=""

	printf "%s %s%% " "$icon" "$capacity"
done | sed 's/ *$//'
